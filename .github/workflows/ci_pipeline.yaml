name: Complete CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest

    steps:
      # --------------------------
      # Stage 1: Checkout code
      # --------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # --------------------------
      # Stage 2: Setup Python
      # --------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # --------------------------
      # Stage 3: Install dependencies
      # --------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov bandit flake8

      # --------------------------
      # Stage 4: Linting & Formatting
      # --------------------------
      - name: Run Linting (flake8)
        run: |
          echo "Running flake8..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          echo "Code style check complete."

      # --------------------------
      # Stage 5: Security Scan (Bandit)
      # --------------------------
      - name: Run Bandit (Python security scan)
        run: |
          echo "Running Bandit security analysis..."
          bandit -r . -f txt -o bandit_report.txt
          cat bandit_report.txt

      # --------------------------
      # Stage 6: Unit Tests + Coverage
      # --------------------------
      - name: Run Unit Tests
        run: |
          echo "Running unit tests..."
          pytest --cov=. --cov-report=term-missing

      # --------------------------
      # Stage 7: Build Docker Image
      # --------------------------
      - name: Build Docker Image
        run: |
          echo "Building Docker image..."
          docker build -t ${{ github.repository }}:latest .

      # --------------------------
      # Stage 8: Trivy Security Scan (Docker image)
      # --------------------------
      - name: Run Trivy image scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.repository }}:latest
          format: 'table'
          exit-code: '0'
          vuln-type: 'os,library'
          ignore-unfixed: true

      # --------------------------
      # Stage 9: Push to Docker Hub
      # --------------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          IMAGE_NAME=${{ github.repository }}
          docker tag $IMAGE_NAME:latest ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest

name: Python + Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: python-app
      IMAGE_TAG: ci
      DOCKERHUB_REPO: your-dockerhub-username/python-app

    steps:

      #########################
      # 1️⃣ Checkout Code
      #########################
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #########################
      # 2️⃣ Setup Python & Install Dependencies
      #########################
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Python Dependencies
        run: |
          pip install bandit pytest pytest-cov

      #########################
      # 3️⃣ Security Scan (Bandit)
      #########################
      - name: Run Bandit Security Scan
        run: |
          mkdir -p reports
          bandit -r . -lll -f json -o reports/bandit_report.json || true

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: reports/bandit_report.json

      #########################
      # 4️⃣ Unit Tests & Coverage
      #########################
      - name: Run Unit Tests with Coverage
        run: |
          mkdir -p reports
          pytest --cov=. --cov-report json:reports/coverage.json || true

      - name: Upload Test Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: reports/coverage.json

      #########################
      # 5️⃣ Build Docker Image
      #########################
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: false
          tags: ${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}

      #########################
      # 6️⃣ Scan Docker Image (Trivy)
      #########################
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

      - name: Run Trivy Image Scan
        run: |
          mkdir -p reports
          trivy image --format json --output reports/trivy-image-report.json ${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }} || true

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image-report
          path: reports/trivy-image-report.json

      #########################
      # 7️⃣ Push Docker Image to Docker Hub
      #########################
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}
